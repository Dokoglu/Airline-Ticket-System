package com.eticket.ETicket.demo.service;

import java.util.List;

import org.springframework.stereotype.Service;

import com.eticket.ETicket.demo.dto.CreateBuyTicketRequest;
import com.eticket.ETicket.demo.dto.CreateFlightRequest;
import com.eticket.ETicket.demo.dto.SearchTicketRequest;
import com.eticket.ETicket.demo.model.Ticket;
import com.eticket.ETicket.demo.repository.TicketRepository;
import com.eticket.ETicket.demo.utilities.mappers.ModelMapperService;

@Service
public class TicketManager  implements TicketService{

	private final TicketRepository ticketRepository;
	private ModelMapperService modelMapperService;
	

	public TicketManager(TicketRepository ticketRepository, ModelMapperService modelMapperService) {
		
		this.ticketRepository = ticketRepository;
		this.modelMapperService = modelMapperService;
	}


	@Override
	public void buyTicket(CreateBuyTicketRequest buyTicketRequest) {
		// TODO Auto-generated method stub
//		Ticket ticket =new Ticket();
//		ticket.setFlightID(buyTicketRequest.getFlightID());
//		ticket.setDurationOfFlight(buyTicketRequest.getDurationOfFlight());
//		ticket.setDepartureCity(buyTicketRequest.getDepartureCity());
//		ticket.setDepartureAirport(buyTicketRequest.getDepartureAirport());
//		ticket.setArrivalCity(buyTicketRequest.getArrivalCity());
//		ticket.setArrivalAirport(buyTicketRequest.getArrivalAirport());
//		ticket.setPrice(buyTicketRequest.getPrice());
//		this.ticketRepository.save(ticket);
		Ticket ticket=this.modelMapperService.forRequest().map(buyTicketRequest, Ticket.class);
	}

	@Override
	public void riseTicketPrice(CreateFlightRequest createFlightRequest) {
		// TODO Auto-generated method stub
		CreateBuyTicketRequest buyTicketRequest=new CreateBuyTicketRequest();
		int i=createFlightRequest.getQuotaOfFlight();
		float k=buyTicketRequest.getPrice();
		
		
	}

	@Override
	public List<Ticket> searchTicket(SearchTicketRequest searchTicketRequest) throws Exception {
		List<Ticket> ticket=this.ticketRepository.findAll();
		
		if(findTicket(searchTicketRequest.getTicketID())) {
			System.out.println("The ticket exist");
		}
		else {
			throw new Exception("There is no suitable ticket");
		}
		return ticket;
		
		
		
	}
	
	public boolean findTicket(int i) {
		
		if(this.ticketRepository.findById(i) != null ){
			return true;
			
		}
		else {
		return false;
		}
	}


	@Override
	public void cancel(int id) {
		// TODO Auto-generated method stub
		Ticket ticket=this.ticketRepository.findById(id).get();
		this.ticketRepository.deleteById(ticket.getTicketID());
		
	}

}
